@charset "UTF-8";/*!
 * inuitcss, by @csswizardry
 *
 * github.com/inuitcss | inuitcss.com
 */.green{color:#16AA5E}.orange{color:#FA7808}.blue{color:#1B7CC8}.dark-pink{color:#F40024}/*! normalize.css v3.0.2 | MIT License | git.io/normalize */article,aside,details,figcaption,figure,footer,header,hgroup,main,menu,nav,section,summary{display:block}audio,canvas,progress,video{display:inline-block;vertical-align:baseline}audio:not([controls]){display:none;height:0}[hidden],template{display:none}a{background-color:transparent}a:active,a:hover{outline:0}abbr[title]{border-bottom:1px dotted}dfn{font-style:italic}mark{background:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sup{top:-.5em}sub{bottom:-.25em}img{border:0}svg:not(:root){overflow:hidden}hr{box-sizing:content-box;height:0}code,kbd,pre,samp{font-family:monospace,monospace;font-size:1em}button,input,optgroup,select,textarea{color:inherit;font:inherit;margin:0}button{overflow:visible}button,select{text-transform:none}button,html input[type=button],input[type=reset],input[type=submit]{-webkit-appearance:button;cursor:pointer}button[disabled],html input[disabled]{cursor:default}button::-moz-focus-inner,input::-moz-focus-inner{border:0;padding:0}input{line-height:normal}input[type=checkbox],input[type=radio]{box-sizing:border-box;padding:0}input[type=number]::-webkit-inner-spin-button,input[type=number]::-webkit-outer-spin-button{height:auto}input[type=search]{-webkit-appearance:textfield;box-sizing:content-box}input[type=search]::-webkit-search-cancel-button,input[type=search]::-webkit-search-decoration{-webkit-appearance:none}fieldset{border:1px solid silver}legend{border:0}textarea{overflow:auto}optgroup{font-weight:700}table{border-collapse:collapse;border-spacing:0}blockquote,body,caption,dd,dl,fieldset,figure,form,h1,h2,h3,h4,h5,h6,hr,legend,ol,p,pre,table,td,th,ul{margin:0;padding:0}abbr[title],dfn[title]{cursor:help}ins,u{text-decoration:none}ins{border-bottom:1px solid}html{box-sizing:border-box}*,:after,:before{box-sizing:inherit}address,blockquote,dl,fieldset,figure,h1,h2,h3,h4,h5,h6,hr,ol,p,pre,table,ul{margin-bottom:24px;margin-bottom:1.5rem}dd,ol,ul{margin-left:48px;margin-left:3rem}html{font-size:1em;line-height:1.5;background-color:#fff;overflow-y:scroll;min-height:100%;-webkit-text-size-adjust:100%;-ms-text-size-adjust:100%;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;color:orange;font-family:Arial,sans-serif;font-weight:300}body,html{margin:0;padding:0}body{overflow:hidden}h1{font-size:2.25rem;line-height:1.33333}h2{font-size:30px;font-size:1.875rem;line-height:1.6}h3{font-size:24px;font-size:1.5rem;line-height:1}h4{font-size:20px;font-size:1.25rem;line-height:1.2}h5{font-size:16px;font-size:1rem;line-height:1.5}h6{font-size:14px;font-size:.875rem;line-height:1.71429}h1,h2,h3,h4,h5,h6{font-weight:300}.heading{font-size:22px;font-size:1.375rem;line-height:1.09091}.heading-sub{font-size:16px;font-size:1rem;line-height:1.5;font-weight:600;margin-bottom:0}a,b,dt,strong{font-weight:600}code,kbd,samp{font-family:Inconsolata,Monaco,Consolas,"Andale Mono","Bitstream Vera Sans Mono","Courier New",Courier,monospace}pre{white-space:pre;word-wrap:normal;overflow:auto;padding:12px;border-radius:3px}@media screen and (min-width:1380px){figure{margin-left:-128px}}figure>img{border-radius:3px}figcaption{font-size:12px;font-size:.75rem;line-height:2}@media screen and (min-width:1380px){figcaption{margin-left:128px}}hr{border:none;border-bottom:1px solid #000;margin-bottom:23px}pre mark{background:0 0;border-bottom:1px solid;color:inherit}.text-banner{text-align:center}ul{margin:0}a{text-decoration:none}a:active,a:focus,a:hover{text-decoration:underline}@font-face{font-family:Rotondac-Regular;src:url(/assets/fonts/rotondac-webfont.eot);src:url(/assets/fonts/rotondac-webfont.eot?#iefix) format("embedded-opentype"),url(/assets/fonts/rotondac-webfont.woff) format("woff"),url(/assets/fonts/rotondac-webfont.ttf) format("truetype")}@font-face{font-family:Rotondac-Bold;src:url(/assets/fonts/rotondac-bold-webfont.eot);src:url(/assets/fonts/rotondac-bold-webfont.eot?#iefix) format("embedded-opentype"),url(/assets/fonts/rotondac-bold-webfont.woff) format("woff"),url(/assets/fonts/rotondac-bold-webfont.ttf) format("truetype")}li>ol,li>ul{margin-bottom:0}img{max-width:100%;font-style:italic;vertical-align:middle}.gm-style img,img[height],img[width]{max-width:none}.wrapper{height:100%;width:100%;margin:0 auto;padding-right:12px;padding-left:12px}@media screen and (min-width:45em){.wrapper{padding-right:24px;padding-left:24px}}.btn{display:inline-block;vertical-align:middle;font:inherit;text-align:center;margin:0;cursor:pointer;overflow:visible;padding:11px 23px;background-color:#4a8ec2;border:1px solid #4a8ec2}.btn,.btn:active,.btn:focus,.btn:hover{text-decoration:none;color:#fff}.btn::-moz-focus-inner{border:0;padding:0}.layout{list-style:none;margin:0;padding:0;margin-left:-24px}.layout__item{display:inline-block;padding-left:24px;vertical-align:top;width:100%}.box{display:block;padding:24px}.box>:last-child{margin-bottom:0}.media{display:block}.media__img{float:left;margin-right:24px}.media__img>img{display:block}.media__body{overflow:hidden;display:block}.media__body,.media__body>:last-child{margin-bottom:0}.block{display:block}.block__img{vertical-align:middle;margin-bottom:24px}.block__body{display:block}.scroll-value{color:red;position:fixed;top:20px;right:20px}.page-head{height:100vh;width:100%}.page-head .wrapper{display:table}.page-head .title{display:table-cell;opacity:0;padding-top:5%;padding-left:48px;padding-right:48px;vertical-align:middle}.page-head .title embed{display:block;font-family:Rotondac-Regular sans-serif;margin:0 auto}.page-head img{position:fixed;width:auto;height:auto;max-height:100%;padding-left:48px;padding-right:48px;padding-bottom:48px;padding-top:48px;z-index:-1}.rotating-ramen{background:url(/assets/images/rotating-ramen.jpg) no-repeat center;background-size:contain;position:fixed;top:5%;left:5%;right:5%;bottom:5%;z-index:-1}.container{text-align:center}.line-up--title{border-bottom:10px solid #FA7808;color:#FA7808;display:inline-block;font-family:Rotondac-Bold;letter-spacing:.08em;margin-bottom:288px;text-transform:uppercase;font-size:80px;font-size:5rem;line-height:1.2;font-weight:600}.line-up--list{font-family:Rotondac-Regular}.shop{cursor:pointer;margin-bottom:288px;transition:all .4s ease;font-size:70px;font-size:4.375rem;line-height:1.02857}.gallery{background-size:cover;background-repeat:no-repeat;background-position:center center;opacity:0;height:auto;left:0;min-height:100%;position:fixed;top:0;width:100%;z-index:-1}.gallery.gallery--on{display:block}.transparent{opacity:.8}.spread{letter-spacing:.2em}.blur{-webkit-filter:blur(8px);filter:blur(8px);letter-spacing:.1em;font-size:100px;font-size:6.25rem;line-height:1.2}.bridge-to-footer{background:linear-gradient(to bottom,rgba(255,255,255,.01) 0,#FFF 90%,#FFF 100%);display:table;height:100vh;width:100%}.bridge-to-footer .wrapper{display:table-cell;vertical-align:middle}.bridge-to-footer h3{font-family:Rotondac-Bold;letter-spacing:.1em;text-transform:uppercase;font-size:60px;font-size:3.75rem;line-height:1.2;font-weight:600}.bridge-to-footer a{color:inherit;text-decoration:none}.bridge-to-footer a:hover{text-decoration:none}.arrow{display:block;position:absolute;left:50%;margin-left:-2.5%;width:5.5%;-webkit-animation:floating-arrow ease-in-out .8s infinite alternate;animation:floating-arrow ease-in-out .8s infinite alternate}.arrow object{pointer-events:none}@-webkit-keyframes floating-arrow{from{-webkit-transform:translateY(0);transform:translateY(0)}to{-webkit-transform:translateY(50%);transform:translateY(50%)}}@keyframes floating-arrow{from{-webkit-transform:translateY(0);transform:translateY(0)}to{-webkit-transform:translateY(50%);transform:translateY(50%)}}.page-foot{background:#000;display:table;height:100vh;width:100%}.ramen-map--logo{display:table-cell;vertical-align:middle;text-align:center}.ramen-map--logo a{display:inline-block}.ramen-map--logo object{pointer-events:none}.box:after,.clearfix:after,.media:after{content:"";display:table;clear:both}.alpha{font-size:36px;font-size:2.25rem;line-height:1.33333}.beta{font-size:30px;font-size:1.875rem;line-height:1.6}.gamma{font-size:24px;font-size:1.5rem;line-height:1}.delta{font-size:20px;font-size:1.25rem;line-height:1.2}.epsilon{font-size:16px;font-size:1rem;line-height:1.5}.zeta{font-size:14px;font-size:.875rem;line-height:1.71429}[class~="1/1"]{width:100%!important}[class~="1/2"],[class~="2/4"],[class~="3/6"],[class~="4/8"],[class~="5/10"],[class~="6/12"]{width:50%!important}[class~="1/3"],[class~="2/6"],[class~="3/9"],[class~="4/12"]{width:33.3333333%!important}[class~="2/3"],[class~="4/6"],[class~="6/9"],[class~="8/12"]{width:66.6666666%!important}[class~="1/4"],[class~="2/8"],[class~="3/12"]{width:25%!important}[class~="3/4"],[class~="6/8"],[class~="9/12"]{width:75%!important}[class~="1/5"],[class~="2/10"]{width:20%!important}[class~="2/5"],[class~="4/10"]{width:40%!important}[class~="3/5"],[class~="6/10"]{width:60%!important}[class~="4/5"],[class~="8/10"]{width:80%!important}[class~="1/6"],[class~="2/12"]{width:16.6666666%!important}[class~="5/6"],[class~="10/12"]{width:83.3333333%!important}[class~="1/8"]{width:12.5%!important}[class~="3/8"]{width:37.5%!important}[class~="5/8"]{width:62.5%!important}[class~="7/8"]{width:87.5%!important}[class~="1/9"]{width:11.1111111%!important}[class~="2/9"]{width:22.2222222%!important}[class~="4/9"]{width:44.4444444%!important}[class~="5/9"]{width:55.5555555%!important}[class~="7/9"]{width:77.7777777%!important}[class~="8/9"]{width:88.8888888%!important}[class~="1/10"]{width:10%!important}[class~="3/10"]{width:30%!important}[class~="7/10"]{width:70%!important}[class~="9/10"]{width:90%!important}[class~="1/12"]{width:8.3333333%!important}[class~="5/12"]{width:41.6666666%!important}[class~="7/12"]{width:58.3333333%!important}[class~="11/12"]{width:91.6666666%!important}@media screen and (max-width:44.9375em){[class~="palm-1/1"]{width:100%!important}[class~="palm-1/2"],[class~="palm-2/4"],[class~="palm-3/6"],[class~="palm-4/8"],[class~="palm-5/10"],[class~="palm-6/12"]{width:50%!important}[class~="palm-1/3"],[class~="palm-2/6"],[class~="palm-3/9"],[class~="palm-4/12"]{width:33.3333333%!important}[class~="palm-2/3"],[class~="palm-4/6"],[class~="palm-6/9"],[class~="palm-8/12"]{width:66.6666666%!important}[class~="palm-1/4"],[class~="palm-2/8"],[class~="palm-3/12"]{width:25%!important}[class~="palm-3/4"],[class~="palm-6/8"],[class~="palm-9/12"]{width:75%!important}[class~="palm-1/5"],[class~="palm-2/10"]{width:20%!important}[class~="palm-2/5"],[class~="palm-4/10"]{width:40%!important}[class~="palm-3/5"],[class~="palm-6/10"]{width:60%!important}[class~="palm-4/5"],[class~="palm-8/10"]{width:80%!important}[class~="palm-1/6"],[class~="palm-2/12"]{width:16.6666666%!important}[class~="palm-5/6"],[class~="palm-10/12"]{width:83.3333333%!important}[class~="palm-1/8"]{width:12.5%!important}[class~="palm-3/8"]{width:37.5%!important}[class~="palm-5/8"]{width:62.5%!important}[class~="palm-7/8"]{width:87.5%!important}[class~="palm-1/9"]{width:11.1111111%!important}[class~="palm-2/9"]{width:22.2222222%!important}[class~="palm-4/9"]{width:44.4444444%!important}[class~="palm-5/9"]{width:55.5555555%!important}[class~="palm-7/9"]{width:77.7777777%!important}[class~="palm-8/9"]{width:88.8888888%!important}[class~="palm-1/10"]{width:10%!important}[class~="palm-3/10"]{width:30%!important}[class~="palm-7/10"]{width:70%!important}[class~="palm-9/10"]{width:90%!important}[class~="palm-1/12"]{width:8.3333333%!important}[class~="palm-5/12"]{width:41.6666666%!important}[class~="palm-7/12"]{width:58.3333333%!important}[class~="palm-11/12"]{width:91.6666666%!important}}@media screen and (min-width:45em) and (max-width:63.9375em){[class~="lap-1/1"]{width:100%!important}[class~="lap-1/2"],[class~="lap-2/4"],[class~="lap-3/6"],[class~="lap-4/8"],[class~="lap-5/10"],[class~="lap-6/12"]{width:50%!important}[class~="lap-1/3"],[class~="lap-2/6"],[class~="lap-3/9"],[class~="lap-4/12"]{width:33.3333333%!important}[class~="lap-2/3"],[class~="lap-4/6"],[class~="lap-6/9"],[class~="lap-8/12"]{width:66.6666666%!important}[class~="lap-1/4"],[class~="lap-2/8"],[class~="lap-3/12"]{width:25%!important}[class~="lap-3/4"],[class~="lap-6/8"],[class~="lap-9/12"]{width:75%!important}[class~="lap-1/5"],[class~="lap-2/10"]{width:20%!important}[class~="lap-2/5"],[class~="lap-4/10"]{width:40%!important}[class~="lap-3/5"],[class~="lap-6/10"]{width:60%!important}[class~="lap-4/5"],[class~="lap-8/10"]{width:80%!important}[class~="lap-1/6"],[class~="lap-2/12"]{width:16.6666666%!important}[class~="lap-5/6"],[class~="lap-10/12"]{width:83.3333333%!important}[class~="lap-1/8"]{width:12.5%!important}[class~="lap-3/8"]{width:37.5%!important}[class~="lap-5/8"]{width:62.5%!important}[class~="lap-7/8"]{width:87.5%!important}[class~="lap-1/9"]{width:11.1111111%!important}[class~="lap-2/9"]{width:22.2222222%!important}[class~="lap-4/9"]{width:44.4444444%!important}[class~="lap-5/9"]{width:55.5555555%!important}[class~="lap-7/9"]{width:77.7777777%!important}[class~="lap-8/9"]{width:88.8888888%!important}[class~="lap-1/10"]{width:10%!important}[class~="lap-3/10"]{width:30%!important}[class~="lap-7/10"]{width:70%!important}[class~="lap-9/10"]{width:90%!important}[class~="lap-1/12"]{width:8.3333333%!important}[class~="lap-5/12"]{width:41.6666666%!important}[class~="lap-7/12"]{width:58.3333333%!important}[class~="lap-11/12"]{width:91.6666666%!important}}@media screen and (min-width:45em){[class~="lap-and-up-1/1"]{width:100%!important}[class~="lap-and-up-1/2"],[class~="lap-and-up-2/4"],[class~="lap-and-up-3/6"],[class~="lap-and-up-4/8"],[class~="lap-and-up-5/10"],[class~="lap-and-up-6/12"]{width:50%!important}[class~="lap-and-up-1/3"],[class~="lap-and-up-2/6"],[class~="lap-and-up-3/9"],[class~="lap-and-up-4/12"]{width:33.3333333%!important}[class~="lap-and-up-2/3"],[class~="lap-and-up-4/6"],[class~="lap-and-up-6/9"],[class~="lap-and-up-8/12"]{width:66.6666666%!important}[class~="lap-and-up-1/4"],[class~="lap-and-up-2/8"],[class~="lap-and-up-3/12"]{width:25%!important}[class~="lap-and-up-3/4"],[class~="lap-and-up-6/8"],[class~="lap-and-up-9/12"]{width:75%!important}[class~="lap-and-up-1/5"],[class~="lap-and-up-2/10"]{width:20%!important}[class~="lap-and-up-2/5"],[class~="lap-and-up-4/10"]{width:40%!important}[class~="lap-and-up-3/5"],[class~="lap-and-up-6/10"]{width:60%!important}[class~="lap-and-up-4/5"],[class~="lap-and-up-8/10"]{width:80%!important}[class~="lap-and-up-1/6"],[class~="lap-and-up-2/12"]{width:16.6666666%!important}[class~="lap-and-up-5/6"],[class~="lap-and-up-10/12"]{width:83.3333333%!important}[class~="lap-and-up-1/8"]{width:12.5%!important}[class~="lap-and-up-3/8"]{width:37.5%!important}[class~="lap-and-up-5/8"]{width:62.5%!important}[class~="lap-and-up-7/8"]{width:87.5%!important}[class~="lap-and-up-1/9"]{width:11.1111111%!important}[class~="lap-and-up-2/9"]{width:22.2222222%!important}[class~="lap-and-up-4/9"]{width:44.4444444%!important}[class~="lap-and-up-5/9"]{width:55.5555555%!important}[class~="lap-and-up-7/9"]{width:77.7777777%!important}[class~="lap-and-up-8/9"]{width:88.8888888%!important}[class~="lap-and-up-1/10"]{width:10%!important}[class~="lap-and-up-3/10"]{width:30%!important}[class~="lap-and-up-7/10"]{width:70%!important}[class~="lap-and-up-9/10"]{width:90%!important}[class~="lap-and-up-1/12"]{width:8.3333333%!important}[class~="lap-and-up-5/12"]{width:41.6666666%!important}[class~="lap-and-up-7/12"]{width:58.3333333%!important}[class~="lap-and-up-11/12"]{width:91.6666666%!important}}@media screen and (max-width:63.9375em){[class~="portable-1/1"]{width:100%!important}[class~="portable-1/2"],[class~="portable-2/4"],[class~="portable-3/6"],[class~="portable-4/8"],[class~="portable-5/10"],[class~="portable-6/12"]{width:50%!important}[class~="portable-1/3"],[class~="portable-2/6"],[class~="portable-3/9"],[class~="portable-4/12"]{width:33.3333333%!important}[class~="portable-2/3"],[class~="portable-4/6"],[class~="portable-6/9"],[class~="portable-8/12"]{width:66.6666666%!important}[class~="portable-1/4"],[class~="portable-2/8"],[class~="portable-3/12"]{width:25%!important}[class~="portable-3/4"],[class~="portable-6/8"],[class~="portable-9/12"]{width:75%!important}[class~="portable-1/5"],[class~="portable-2/10"]{width:20%!important}[class~="portable-2/5"],[class~="portable-4/10"]{width:40%!important}[class~="portable-3/5"],[class~="portable-6/10"]{width:60%!important}[class~="portable-4/5"],[class~="portable-8/10"]{width:80%!important}[class~="portable-1/6"],[class~="portable-2/12"]{width:16.6666666%!important}[class~="portable-5/6"],[class~="portable-10/12"]{width:83.3333333%!important}[class~="portable-1/8"]{width:12.5%!important}[class~="portable-3/8"]{width:37.5%!important}[class~="portable-5/8"]{width:62.5%!important}[class~="portable-7/8"]{width:87.5%!important}[class~="portable-1/9"]{width:11.1111111%!important}[class~="portable-2/9"]{width:22.2222222%!important}[class~="portable-4/9"]{width:44.4444444%!important}[class~="portable-5/9"]{width:55.5555555%!important}[class~="portable-7/9"]{width:77.7777777%!important}[class~="portable-8/9"]{width:88.8888888%!important}[class~="portable-1/10"]{width:10%!important}[class~="portable-3/10"]{width:30%!important}[class~="portable-7/10"]{width:70%!important}[class~="portable-9/10"]{width:90%!important}[class~="portable-1/12"]{width:8.3333333%!important}[class~="portable-5/12"]{width:41.6666666%!important}[class~="portable-7/12"]{width:58.3333333%!important}[class~="portable-11/12"]{width:91.6666666%!important}}@media screen and (min-width:64em){[class~="desk-1/1"]{width:100%!important}[class~="desk-1/2"],[class~="desk-2/4"],[class~="desk-3/6"],[class~="desk-4/8"],[class~="desk-5/10"],[class~="desk-6/12"]{width:50%!important}[class~="desk-1/3"],[class~="desk-2/6"],[class~="desk-3/9"],[class~="desk-4/12"]{width:33.3333333%!important}[class~="desk-2/3"],[class~="desk-4/6"],[class~="desk-6/9"],[class~="desk-8/12"]{width:66.6666666%!important}[class~="desk-1/4"],[class~="desk-2/8"],[class~="desk-3/12"]{width:25%!important}[class~="desk-3/4"],[class~="desk-6/8"],[class~="desk-9/12"]{width:75%!important}[class~="desk-1/5"],[class~="desk-2/10"]{width:20%!important}[class~="desk-2/5"],[class~="desk-4/10"]{width:40%!important}[class~="desk-3/5"],[class~="desk-6/10"]{width:60%!important}[class~="desk-4/5"],[class~="desk-8/10"]{width:80%!important}[class~="desk-1/6"],[class~="desk-2/12"]{width:16.6666666%!important}[class~="desk-5/6"],[class~="desk-10/12"]{width:83.3333333%!important}[class~="desk-1/8"]{width:12.5%!important}[class~="desk-3/8"]{width:37.5%!important}[class~="desk-5/8"]{width:62.5%!important}[class~="desk-7/8"]{width:87.5%!important}[class~="desk-1/9"]{width:11.1111111%!important}[class~="desk-2/9"]{width:22.2222222%!important}[class~="desk-4/9"]{width:44.4444444%!important}[class~="desk-5/9"]{width:55.5555555%!important}[class~="desk-7/9"]{width:77.7777777%!important}[class~="desk-8/9"]{width:88.8888888%!important}[class~="desk-1/10"]{width:10%!important}[class~="desk-3/10"]{width:30%!important}[class~="desk-7/10"]{width:70%!important}[class~="desk-9/10"]{width:90%!important}[class~="desk-1/12"]{width:8.3333333%!important}[class~="desk-5/12"]{width:41.6666666%!important}[class~="desk-7/12"]{width:58.3333333%!important}[class~="desk-11/12"]{width:91.6666666%!important}}
/*# sourceMappingURL=data:application/json;base64, */